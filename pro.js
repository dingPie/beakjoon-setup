// 이거 최대큰수랑 비슷한 문제.
// 냅색인가? 아무튼
// 우표문제!

// 이걸 뜯었을 때 / 안뜯었을때 최대값을 계산해야 함.
// dp를 어떻게 구성해야 되지? 2차원배열? 1차웡배열?

// 냅색 알고리즘이랑 비슷하니까 2차원 배열로 구성해야 될 것 같고
// 어떻게 채워나가지 ?

const sticker = [14, 6, 5, 11, 3, 9, 2, 10];
const n = sticker.length;

const dp = Array(n)
  .fill(0)
  .map((v) => Array(n).fill(0));

console.log(dp);

// n번째 숫자까지만? 전부다? dp돌려?

// 계단처럼 n번쨰를 진행했을 떄 잃게되는 수를 기록해야 할 듯?

//
